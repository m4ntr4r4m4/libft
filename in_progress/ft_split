/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_split.c                                         :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: ahammoud <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2021/10/13 12:18:15 by ahammoud          #+#    #+#             */
/*   Updated: 2021/10/13 20:02:20 by ahammoud         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */
#include <stdlib.h>

int	ft_strlen(char *str)
{
	int	i;

	i = 0;
	while (str[i] != '\0')
		i++;
	return (i);
}

int	word_c(char *str, char *charset)
{
	int	i;
	int	j;
	int	wc;

	i = 0;
	wc = 0;
	j = 0;
	while (str[i])
	{
		j = 0;
		while (charset[j] == str[i])
		{
			j++;
			i++;
		}
		if (charset[j] == '\0')
			wc++;
		i++;
	}
	return (wc);
}

char	*ft_strncpy(char *dest, char *src, unsigned int n)
{
	unsigned int	i;

	i = 0;
	while (src[i] != '\0' && (i < n))
	{
		dest[i] = src[i];
		i++;
	}
	while (i < n)
	{
		dest[i] = '\0';
		i++;
	}
	return (dest);
}

void	dump(int wc, char **mots, char *str, char *charset)
{
	int	i;
	int	j;
	int	c;
	int	v;

	c = 0;
	i = 0;
	v = 1;
	while (str[i++] == charset[j++] && charset[j])
		v++;
	while (c < wc)
	{
		j = 0;
		while (charset[j] && charset[j] == str[i])
		{
			j++;
			i++;
		}
		if (charset[j] == '\0')
		{
			mots[c] = malloc(sizeof(char) * (i - (j + v)));
			ft_strncpy(mots[c], &str[v], (i - (j + v)));
			c++;
			v = i;
		}
		i++;
	}
	mots[c] = 0;
}

char	**ft_split(char *str, char *charset)
{
	char	**mots;
	int		wc;
	int		cs;

	cs = ft_strlen(charset);
	wc = word_c(str, charset);
	mots = malloc(sizeof(char *) * ((wc) + 1));
	dump(wc, mots, str, charset);
	return (mots);
}
